문제 설명

문자열 s가 주어졌을 때, s의 각 위치마다 자신보다 앞에 나왔으면서, 자신과 가장 가까운 곳에 있는 같은 글자가 어디 있는지 알고 싶습니다.
예를 들어, s="banana"라고 할 때,  각 글자들을 왼쪽부터 오른쪽으로 읽어 나가면서 다음과 같이 진행할 수 있습니다.
b는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
a는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
n은 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
a는 자신보다 두 칸 앞에 a가 있습니다. 이는 2로 표현합니다.
n도 자신보다 두 칸 앞에 n이 있습니다. 이는 2로 표현합니다.
a는 자신보다 두 칸, 네 칸 앞에 a가 있습니다. 이 중 가까운 것은 두 칸 앞이고, 이는 2로 표현합니다.
따라서 최종 결과물은 [-1, -1, -1, 2, 2, 2]가 됩니다.
문자열 s이 주어질 때, 위와 같이 정의된 연산을 수행하는 함수 solution을 완성해주세요.



풀이

def solution(s):
    a = {}
    b = []
    
    for idx, i in enumerate(s):
        if i in a:
            b.append(idx - a[i])
        else:
            b.append(-1)
            
        a[i] = idx
        
    return b



설명

조건문을 나누어서 문자가 처음 등장했으면 결과를 담을 리스트 b에 -1을 추가해주고, 이미 한번 이상 등장한 글자이면 마지막으로 등장한 글자를 기준으로
차이를 계산햬야하므로 글자가 등장 할 때마가 인덱스를 업데이트 해줘야 한다.
글자가 중복으로 등장했을때, 그 인덱스를 갱신하기 쉽도록 딕셔너리를 활용하였고, 가장 마지막으로 등장한 글자의 인덱스를 새로운 글자의 인덱스로 갱신하기 전에
이전의 인덱스와 새로운 인덱스의 차이를 계산해서 b에 추가하면 된다.


