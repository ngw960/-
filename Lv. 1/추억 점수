문제 설명

사진들을 보며 추억에 젖어 있던 루는 사진별로 추억 점수를 매길려고 합니다. 
사진 속에 나오는 인물의 그리움 점수를 모두 합산한 값이 해당 사진의 추억 점수가 됩니다. 
예를 들어 사진 속 인물의 이름이 ["may", "kein", "kain"]이고 각 인물의 그리움 점수가 [5점, 10점, 1점]일 때 
해당 사진의 추억 점수는 16(5 + 10 + 1)점이 됩니다. 
다른 사진 속 인물의 이름이 ["kali", "mari", "don", "tony"]이고 ["kali", "mari", "don"]의 그리움 점수가 각각 [11점, 1점, 55점]]이고, 
"tony"는 그리움 점수가 없을 때, 이 사진의 추억 점수는 3명의 그리움 점수를 합한 67(11 + 1 + 55)점입니다.
그리워하는 사람의 이름을 담은 문자열 배열 name, 각 사람별 그리움 점수를 담은 정수 배열 yearning, 
각 사진에 찍힌 인물의 이름을 담은 이차원 문자열 배열 photo가 매개변수로 주어질 때, 
사진들의 추억 점수를 photo에 주어진 순서대로 배열에 담아 return하는 solution 함수를 완성해주세요.



풀이

def solution(name, yearning, photo): 
    score = {}
    result = []
    
    for i in range(len(name)):
        score[name[i]] = yearning[i]
    
    for i in photo:
        sum = 0
        
        for j in i:
            if j in score:
                sum += score[j]
            else:
                sum += 0
        
        result.append(sum)
    
    return result



설명

인물의 이름을 나타내는 리스트 name의 요소를 키로, 그리움 점수를 나타내는 리스트 yearning의 요소를 값으로 딕셔너리에 추가한다.

이차원 리스트에서 각각 요소(사진)에 대한 점수의 합을 구해야 하므로, 이중 반복문을 통해 각 요소(사진)의 요소(인물)에 접근해서 하나씩 sum에 더해준다.
name에 존재하지 않는 이름이 있으면 점수0을 더해주었다.

result에는 각 사진의 점수의 합을 담아야 하므로 두번째 반복문이 끝날때마다 sum을 추가해주었다. --> result.append(sum)



